name: Check
on:
  push:
    paths:
      - '**.nix'
      - '**.rs'
      - Cargo.*
      - flake.lock
  pull_request:
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-22.04

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9
        with:
          extra-conf: |
            log-lines = 500

      - name: Set up Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Set up Cachix
        uses: cachix/cachix-action@v13
        with:
          name: errornobinaries
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Set up build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: build-${{ runner.os }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('flake.nix') }}-${{ hashFiles('**.lock') }}

      - name: Run cargo test
        run: nix develop -c cargo test

  nix-flake:
    name: Nix flake
    runs-on: ubuntu-22.04

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9
        with:
          extra-conf: |
            log-lines = 500

      - name: Set up Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v5
        with:
          fail-mode: true
          check-outdated: false

      - name: Check Nix flake outputs
        run: nix flake check -v --all-systems
